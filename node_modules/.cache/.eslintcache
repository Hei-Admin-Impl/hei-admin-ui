[{"/home/tiantsoa/react/todo git/TODO-list/src/index.tsx":"1","/home/tiantsoa/react/todo git/TODO-list/src/reportWebVitals.ts":"2","/home/tiantsoa/react/todo git/TODO-list/src/App.tsx":"3","/home/tiantsoa/react/todo git/TODO-list/src/components/Form.tsx":"4","/home/tiantsoa/react/todo git/TODO-list/src/components/Card.tsx":"5","/home/tiantsoa/haapi front dev/src/index.tsx":"6","/home/tiantsoa/haapi front dev/src/reportWebVitals.ts":"7","/home/tiantsoa/haapi front dev/src/App.tsx":"8","/home/tiantsoa/haapi front dev/src/components/Form.tsx":"9","/home/tiantsoa/haapi front dev/src/components/Card.tsx":"10","/home/tiantsoa/haapi front dev/src/components/page/LoginPage.tsx":"11","/home/tiantsoa/haapi front dev/src/components/NavHaapi.tsx":"12","/home/tiantsoa/haapi front dev/src/components/page/NewEvent.tsx":"13"},{"size":553,"mtime":1663330241096,"results":"14","hashOfConfig":"15"},{"size":424,"mtime":1663330241096,"results":"16","hashOfConfig":"15"},{"size":297,"mtime":1663330241092,"results":"17","hashOfConfig":"15"},{"size":1093,"mtime":1663330241092,"results":"18","hashOfConfig":"15"},{"size":2984,"mtime":1663330241092,"results":"19","hashOfConfig":"15"},{"size":602,"mtime":1663338678132,"results":"20","hashOfConfig":"21"},{"size":424,"mtime":1663330241096,"results":"22","hashOfConfig":"21"},{"size":517,"mtime":1663339921444,"results":"23","hashOfConfig":"21"},{"size":1093,"mtime":1663330241092,"results":"24","hashOfConfig":"21"},{"size":2984,"mtime":1663330241092,"results":"25","hashOfConfig":"21"},{"size":1218,"mtime":1663334585084,"results":"26","hashOfConfig":"21"},{"size":751,"mtime":1663339609576,"results":"27","hashOfConfig":"21"},{"size":2839,"mtime":1663342663656,"results":"28","hashOfConfig":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecyg9r",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jqk6q1",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tiantsoa/react/todo git/TODO-list/src/index.tsx",[],[],"/home/tiantsoa/react/todo git/TODO-list/src/reportWebVitals.ts",[],[],"/home/tiantsoa/react/todo git/TODO-list/src/App.tsx",[],[],"/home/tiantsoa/react/todo git/TODO-list/src/components/Form.tsx",[],[],"/home/tiantsoa/react/todo git/TODO-list/src/components/Card.tsx",["71"],[],"/home/tiantsoa/haapi front dev/src/index.tsx",[],[],"/home/tiantsoa/haapi front dev/src/reportWebVitals.ts",[],[],[],"/home/tiantsoa/haapi front dev/src/App.tsx",[],[],"/home/tiantsoa/haapi front dev/src/components/Form.tsx",[],[],"/home/tiantsoa/haapi front dev/src/components/Card.tsx",["72"],[],"import React, {useState} from 'react';\nimport \"../components/Card.css\";\n\n\n enum Status {\n     TODO= \"todo\",\n     DOING = \"doing\",\n     DONE = \"done\"\n }\n  interface ListProps {\n    title : string;\n    description: string;\n    status : Status\n }\n interface TypeObject {\n     todo : ListProps[];\n     doing : ListProps[];\n     done : ListProps[];\n }\n\n const tab : ListProps[] = [\n                            {title:\"title\",description:\"add task\",status:Status.TODO},\n                            {title:\"title\",description:\"add task\",status:Status.DOING},\n                            {title:\"title\",description:\"add task\",status:Status.DONE}\n                            ];\n function formateValue(parm:ListProps[]) : TypeObject {\n     const stock : TypeObject = {\n         todo: [],\n         done :[],\n         doing : []\n     };\n     for (let i = 0; i < tab.length; i++) {\n         if(tab[i].status=== Status.TODO){\n             stock.todo.push(tab[i]);\n         }\n         if(tab[i].status=== Status.DOING){\n             stock.doing.push(tab[i]);\n         }\n         if(tab[i].status=== Status.DONE){\n             stock.done.push(tab[i]);\n         }\n     }\n     return stock;\n }\n\n\nconst Card:React.FC=()=> {\n    const [value,setValue] = useState<TypeObject| null>(formateValue(tab));\n\n    console.log(value);\n    return (\n        <div className=\"position\">\n            <div className='card'>\n                <div>{value?.todo.map((e, k)=>{\n                    return (\n                    <div className='card_body'>\n                        \n                        <div className='body'>\n                            <h2>{e.title}</h2>\n                            <p>{e.description}</p>\n                        </div>\n                    </div>\n                    );\n                })}\n                </div>\n            </div>\n            <div className='card'>\n                <div>{value?.doing.map((e, k)=>{\n                    return (\n                        <div className='card_body'>\n                         \n                            <div className='body'>\n                                <h2>{e.title}</h2>\n                                <p>{e.description}</p>\n                             </div>   \n                        </div>\n                    );\n                })}\n                </div>\n            </div>\n            <div className='card'>\n                <div>{value?.done.map((e, k)=>{\n                    return (\n                        <div className='card_body'>\n                            \n                            <div className='body'>\n                                <h2>{e.title}</h2>\n                                <p>{e.description}</p>\n                            </div>\n                        </div>\n                    );\n                })}\n                </div>\n            </div>\n        </div>\n    );\n\n}/*\nconst List: React.FC = props =>{\n    const{ items, title }= props;\n   return (\n       <ul></ul>\n   );\n}*/\nexport default Card;","/home/tiantsoa/haapi front dev/src/components/page/LoginPage.tsx",["73","74"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../styleCss/LoginPage.css';\n\n\nconst loginPage = () => {\n    return (\n        <>\n     <div className=\"Auth-form-container\">\n      <form className=\"Auth-form\">\n        <div className=\"Auth-form-content\">\n          <h3 className=\"Auth-form-title\">Sign In</h3>\n          <div className=\"form-group mt-3\">\n            <label>Username</label>\n            <input\n              type=\"email\"\n              className=\"form-control mt-1\"\n              placeholder=\"Enter email\"\n            />\n          </div>\n          <div className=\"form-group mt-3\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control mt-1\"\n              placeholder=\"Enter password\"\n            />\n          </div>\n          <div className=\"d-grid gap-2 mt-3\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n          <p className=\"forgot-password text-right mt-2\">\n           <b className=\"forgot\">Forgot</b>  <a href=\"#\">password?</a>\n          </p>\n        </div>\n      </form>\n    </div>\n    </>\n    );\n}\nexport default loginPage;","/home/tiantsoa/haapi front dev/src/components/NavHaapi.tsx",[],[],"/home/tiantsoa/haapi front dev/src/components/page/NewEvent.tsx",["75"],[],{"ruleId":"76","severity":1,"message":"77","line":48,"column":18,"nodeType":"78","messageId":"79","endLine":48,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":48,"column":18,"nodeType":"78","messageId":"79","endLine":48,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":35,"column":46,"nodeType":"83","endLine":35,"endColumn":58},{"ruleId":"76","severity":1,"message":"80","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},"@typescript-eslint/no-unused-vars","'setValue' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]