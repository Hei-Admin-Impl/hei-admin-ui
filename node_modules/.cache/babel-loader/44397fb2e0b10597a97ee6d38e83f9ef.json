{"ast":null,"code":"var _jsxFileName = \"/home/tiantsoa/haapi front dev/src/components/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../components/Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Status;\n\n(function (Status) {\n  Status[\"TODO\"] = \"todo\";\n  Status[\"DOING\"] = \"doing\";\n  Status[\"DONE\"] = \"done\";\n})(Status || (Status = {}));\n\nconst tab = [{\n  title: \"title\",\n  description: \"add task\",\n  status: Status.TODO\n}, {\n  title: \"title\",\n  description: \"add task\",\n  status: Status.DOING\n}, {\n  title: \"title\",\n  description: \"add task\",\n  status: Status.DONE\n}];\n\nfunction formateValue(parm) {\n  const stock = {\n    todo: [],\n    done: [],\n    doing: []\n  };\n\n  for (let i = 0; i < tab.length; i++) {\n    if (tab[i].status === Status.TODO) {\n      stock.todo.push(tab[i]);\n    }\n\n    if (tab[i].status === Status.DOING) {\n      stock.doing.push(tab[i]);\n    }\n\n    if (tab[i].status === Status.DONE) {\n      stock.done.push(tab[i]);\n    }\n  }\n\n  return stock;\n}\n\nconst Card = () => {\n  _s();\n\n  const [value, setValue] = useState(formateValue(tab));\n  console.log(value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: value === null || value === void 0 ? void 0 : value.todo.map((e, k) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: e.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: e.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: value === null || value === void 0 ? void 0 : value.doing.map((e, k) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: e.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: e.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: value === null || value === void 0 ? void 0 : value.done.map((e, k) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: e.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: e.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n/*\nconst List: React.FC = props =>{\n   const{ items, title }= props;\n  return (\n      <ul></ul>\n  );\n}*/\n\n\n_s(Card, \"plD/1fLzT/WZst+3adq6WA+MfnU=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","Status","tab","title","description","status","TODO","DOING","DONE","formateValue","parm","stock","todo","done","doing","i","length","push","Card","value","setValue","console","log","map","e","k"],"sources":["/home/tiantsoa/haapi front dev/src/components/Card.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport \"../components/Card.css\";\n\n\n enum Status {\n     TODO= \"todo\",\n     DOING = \"doing\",\n     DONE = \"done\"\n }\n  interface ListProps {\n    title : string;\n    description: string;\n    status : Status\n }\n interface TypeObject {\n     todo : ListProps[];\n     doing : ListProps[];\n     done : ListProps[];\n }\n\n const tab : ListProps[] = [\n                            {title:\"title\",description:\"add task\",status:Status.TODO},\n                            {title:\"title\",description:\"add task\",status:Status.DOING},\n                            {title:\"title\",description:\"add task\",status:Status.DONE}\n                            ];\n function formateValue(parm:ListProps[]) : TypeObject {\n     const stock : TypeObject = {\n         todo: [],\n         done :[],\n         doing : []\n     };\n     for (let i = 0; i < tab.length; i++) {\n         if(tab[i].status=== Status.TODO){\n             stock.todo.push(tab[i]);\n         }\n         if(tab[i].status=== Status.DOING){\n             stock.doing.push(tab[i]);\n         }\n         if(tab[i].status=== Status.DONE){\n             stock.done.push(tab[i]);\n         }\n     }\n     return stock;\n }\n\n\nconst Card:React.FC=()=> {\n    const [value,setValue] = useState<TypeObject| null>(formateValue(tab));\n\n    console.log(value);\n    return (\n        <div className=\"position\">\n            <div className='card'>\n                <div>{value?.todo.map((e, k)=>{\n                    return (\n                    <div className='card_body'>\n                        \n                        <div className='body'>\n                            <h2>{e.title}</h2>\n                            <p>{e.description}</p>\n                        </div>\n                    </div>\n                    );\n                })}\n                </div>\n            </div>\n            <div className='card'>\n                <div>{value?.doing.map((e, k)=>{\n                    return (\n                        <div className='card_body'>\n                         \n                            <div className='body'>\n                                <h2>{e.title}</h2>\n                                <p>{e.description}</p>\n                             </div>   \n                        </div>\n                    );\n                })}\n                </div>\n            </div>\n            <div className='card'>\n                <div>{value?.done.map((e, k)=>{\n                    return (\n                        <div className='card_body'>\n                            \n                            <div className='body'>\n                                <h2>{e.title}</h2>\n                                <p>{e.description}</p>\n                            </div>\n                        </div>\n                    );\n                })}\n                </div>\n            </div>\n        </div>\n    );\n\n}/*\nconst List: React.FC = props =>{\n    const{ items, title }= props;\n   return (\n       <ul></ul>\n   );\n}*/\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module"}